#problem 1
using System;
abstract class Employee
{
	public string Name { get; set; }
	public abstract double CalculateSalary();
}
class Developer : Employee
{
	public override double CalculateSalary()
	{
		return 5000;
	}
}
class Driver : Employee
{
	public override double CalculateSalary()
	{
		return 3000;
	}
}
class Program
{
	static void Main()
	{
		Developer developer = new Developer();
		developer.Name = "John";
		double developerSalary = developer.CalculateSalary();
		Console.WriteLine($"Salary of developer {developer.Name}: {developerSalary}");
		Driver driver = new Driver();
		driver.Name = "Mike";
		double driverSalary = driver.CalculateSalary();
		Console.WriteLine($"Salary of driver {driver.Name}: {driverSalary}");
	}
}

#problem 2
using System;
interface IShape
{
	double CalculateArea();
	double CalculatePerimeter();
}
class Rectangle : IShape
{
	public double Length { get; set; }
	public double Width { get; set; }
	public double CalculateArea()
	{
		return Length * Width;
	}
	public double CalculatePerimeter()
	{
		return 2 * (Length + Width);
	}
}
class Square : IShape
{
	public double Side { get; set; }
	public double CalculateArea()
	{
		return Side * Side;
	}
	public double CalculatePerimeter()
	{
		return 4 * Side;
	}
}
class Program
{
	static void Main()
	{
		Rectangle rectangle = new Rectangle();
		rectangle.Length = 7;
		rectangle.Width = 4;
		double rectangleArea = rectangle.CalculateArea();
		double rectanglePerimeter = rectangle.CalculatePerimeter();
		Console.WriteLine($"Rectangle - Area: {rectangleArea}, Perimeter: {rectanglePerimeter}");
		Square square = new Square();
		square.Side = 4;
		double squareArea = square.CalculateArea();
		double squarePerimeter = square.CalculatePerimeter();
		Console.WriteLine($"Square - Area: {squareArea}, Perimeter: {squarePerimeter}");
	}
}

#problem 3
using System;
class Program
{
	static void Main()
	{
		int rows = 5;
		for (int i = 1; i <= rows; i++)
		{
			for (int j = 1; j <= i; j++)
			{
				Console.Write(j + " ");
			}
			Console.WriteLine();
		}
	}
}

#problem 4
using System;
class Program
{
	static void Main()
	{
		int outerIterations = 5;
		int innerIterations = 2;
		int number = 1;
		for (int i = 1; i <= outerIterations; i++)
		{
			for (int j = 1; j <= innerIterations; j++)
			{
				for (int k = 1; k <= i; k++)
				{
					Console.Write(number + " ");
				}
				number++;
			}
		}
		Console.WriteLine();
	}
}